// <auto-generated />
using System;
using Inventory.DataAccess.SQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Inventory.DataAccess.SQL.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Inventory.Core.Models.HardwareInventory", b =>
                {
                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(24)")
                        .HasMaxLength(24);

                    b.Property<int>("ChassisType")
                        .HasColumnType("int");

                    b.Property<string>("Cores")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DHCPServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNSServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiskSize_GB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DomainMember")
                        .HasColumnType("bit");

                    b.Property<string>("FirmwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HDId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastBootUpTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("MacAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSArchitecture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSBuild")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSInstallDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OSVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Processor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RAM_MB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemoteDesktop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScanDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Scanned")
                        .HasColumnType("bit");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sockets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HostName");

                    b.ToTable("HardwareInventory");
                });

            modelBuilder.Entity("Inventory.Core.Models.SoftwareInventory", b =>
                {
                    b.Property<string>("SoftID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstallDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstallLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstallSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScanDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SoftID");

                    b.ToTable("SoftwareInventory");
                });

            modelBuilder.Entity("Inventory.Core.Models.SoftwareScan", b =>
                {
                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ScanDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ScanID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Scanned")
                        .HasColumnType("bit");

                    b.HasKey("HostName");

                    b.ToTable("SoftwareScan");
                });

            modelBuilder.Entity("Inventory.Core.Models.WarrantyInformation", b =>
                {
                    b.Property<string>("AssetTag")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<string>("Memory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScanDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Storage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarrantyDaysLeft")
                        .HasColumnType("int");

                    b.Property<DateTime>("WarrantyEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WarrantyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarrantyMonthsLeft")
                        .HasColumnType("int");

                    b.Property<DateTime>("WarrantyStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarrantyYearsLeft")
                        .HasColumnType("int");

                    b.HasKey("AssetTag");

                    b.ToTable("WarrantyInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
